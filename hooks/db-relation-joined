#!/bin/bash

[[ -f "$(dirname $0)/common.sh" ]] && source "$(dirname $0)/common.sh"

service_password_file="/var/lib/juju/${database}.${user}.password"
create_password() {
  password=`pwgen -s 16`
  echo ${password} > ${service_password_file}
  # Some semblance of security - make the file only readable by postgres
  chmod 600 $service_password_file
  chown postgres:postgres $service_password_file
}
has_password() {
  [ -f ${service_password_file} ] && password=`cat ${service_password_file}`
}
has_password || create_password

create_user() {
  sudo -su postgres psql -c"CREATE USER ${user} WITH SUPERUSER PASSWORD '${password}'"
  if admin; then
    sudo -su postgres psql -c"ALTER USER ${user} CREATEDB CREATEDB" 
  fi
}
has_user() {
  # XXX: This will return true if there's a substring match on the username
  sudo -su postgres psql -c"SELECT rolname FROM pg_roles;" | grep -q ${user}
}
has_user || create_user

create_database() {
  sudo -su postgres psql -c"CREATE DATABASE ${database} OWNER ${user}" 
  sudo -su postgres psql -c"GRANT ALL PRIVILEGES ON ${database} TO ${user}"
}
has_database() {
  # XXX: This will return true if there's a substring match on the database
  # name
  sudo -su postgres psql -c"SELECT datname FROM pg_database" | grep -q ${database}
}
admin || has_database || create_database

relation-set host=${host} \
             user=${user} \
             password=${password} \
             database=${database} 

